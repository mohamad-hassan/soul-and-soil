plugins {
    id "com.android.application"
    id "kotlin-android"
    id "com.google.gms.google-services"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}


// googleServices.disableVersionCheck = true
def keystoreProperties = new Properties()
    def keystorePropertiesFile = rootProject.file('key.properties')
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }

android {
    testOptions.unitTests.includeAndroidResources = true
    namespace 'YOUR_PACKAGE_NAME' 
    compileSdk flutter.compileSdkVersion //35
    ndkVersion "27.0.12077973"
 
    compileOptions { 
        coreLibraryDesugaringEnabled true
        sourceCompatibility = JavaVersion.VERSION_1_8  
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
         jvmTarget = JavaVersion.VERSION_1_8
    }
 

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "YOUR_PACKAGE_NAME"
        minSdk 27  
        targetSdk flutter.targetSdkVersion //35
        multiDexEnabled true
        versionCode flutter.versionCode
        versionName flutter.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    //Don't Change Signing Configs below.
    signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            minifyEnabled false  // Change from true to false
            shrinkResources false  // Change from true to false
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release //Change it to signingConfigs.release for release apk
        }
    }
} 



flutter {
    source '../..'
}

dependencies {
    implementation 'com.android.support:multidex:2.0.1'
    implementation platform('com.google.firebase:firebase-bom:32.3.1')
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.android.gms:play-services-ads:23.6.0'
    implementation 'com.google.android.gms:play-services-measurement-api:21.6.1'
    implementation 'com.google.android.gms:play-services-auth:21.3.0'
    implementation 'com.google.firebase:firebase-analytics' 
    implementation 'com.google.guava:guava:30.1.1-android'
    implementation 'com.facebook.android:facebook-android-sdk:[8,9)'
    implementation 'com.google.android.ump:user-messaging-platform:2.1.0'
    implementation 'com.google.android.recaptcha:recaptcha:18.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'
 }
 
